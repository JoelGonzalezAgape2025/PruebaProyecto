@model pruebaPlanilla23.Models.Empleado

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Empleado</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Dui" class="control-label"></label>
                <input asp-for="Dui" class="form-control" />
                <span asp-validation-for="Dui" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Apellido" class="control-label"></label>
                <input asp-for="Apellido" class="form-control" />
                <span asp-validation-for="Apellido" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Telefono" class="control-label"></label>
                <input asp-for="Telefono" class="form-control" />
                <span asp-validation-for="Telefono" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Correo" class="control-label"></label>
                <input asp-for="Correo" class="form-control" />
                <span asp-validation-for="Correo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Estado" class="control-label"></label>
                <select asp-for="Estado" class="form-control">
                    <option value="1">Activo</option>
                    <option value="0">Inactivo</option>
                </select>
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaContraInicial" class="control-label"></label>
                <input asp-for="FechaContraInicial" class="form-control" type="date" />
                <span asp-validation-for="FechaContraInicial" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaContraFinal" class="control-label"></label>
                <input asp-for="FechaContraFinal" class="form-control" type="date" />
                <span asp-validation-for="FechaContraFinal" class="text-danger"></span>
            </div>

          
            <div class="form-group">
                <label asp-for="PuestoTrabajoId" class="control-label"></label>
                <select asp-for="PuestoTrabajoId" class="form-control" asp-items="ViewBag.PuestoTrabajoId" id="puestoTrabajoSelect">
                    <option value="">-- Seleccione un puesto --</option>
                </select>
                <span asp-validation-for="PuestoTrabajoId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SalarioBase" class="control-label"></label>
                <input asp-for="SalarioBase" class="form-control" id="salarioBaseInput" readonly />
                <span asp-validation-for="SalarioBase" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="JefeInmediatoId" class="control-label"></label>
                <select asp-for="JefeInmediatoId" class="form-control" asp-items="ViewBag.JefeInmediatoId" id="jefeInmediatoSelect">
                    <option value="">-- Seleccione un jefe --</option>
                </select>
                <span asp-validation-for="JefeInmediatoId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TipoDeHorarioId" class="control-label"></label>
                <select asp-for="TipoDeHorarioId" class="form-control" asp-items="ViewBag.TipoDeHorarioId">
                    <option value="">-- Seleccione un horario --</option>
                </select>
                <span asp-validation-for="TipoDeHorarioId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Usuario" class="control-label"></label>
                <input asp-for="Usuario" class="form-control" id="usuarioInput" disabled />
                <span asp-validation-for="Usuario" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Contraseña" class="control-label"></label>
                <input asp-for="Contraseña" class="form-control" id="contraseñaInput" type="password" disabled />
                <span asp-validation-for="Contraseña" class="text-danger"></span>
            </div>

            <hr />
            <!-- Script para habilitar o deshabilitar Usuario y Contraseña dinámicamente -->
            <script>
                // Lista de roles permitidos
                const rolesPermitidos = ["Gerente de Recursos Humanos", "Supervisor", "Administrador de Nómina"];

                document.getElementById("puestoTrabajoSelect").addEventListener("change", function () {
                    const puestoTrabajoId = this.value;
                    const usuarioInput = document.getElementById("usuarioInput");
                    const contraseñaInput = document.getElementById("contraseñaInput");

                    // Reiniciar los campos
                    usuarioInput.value = "";
                    contraseñaInput.value = "";

                    if (puestoTrabajoId) {
                        // Solicitar el nombre del puesto al servidor
                        fetch(`/Empleado/GetPuestoNombre?puestoTrabajoId=${puestoTrabajoId}`)
                            .then(response => response.json())
                            .then(data => {
                                const nombrePuesto = data.nombrePuesto;

                                if (rolesPermitidos.includes(nombrePuesto)) {
                                    usuarioInput.disabled = false;
                                    contraseñaInput.disabled = false;
                                } else {
                                    usuarioInput.disabled = true;
                                    contraseñaInput.disabled = true;
                                }
                            })
                            .catch(error => console.error("Error:", error));
                    } else {
                        usuarioInput.disabled = true;
                        contraseñaInput.disabled = true;
                    }
                });
            </script>


            @*    SCRIPT JEFE INMEDIATO *@

            <script>
                // Lista de roles que no pueden tener jefe inmediato
                const rolesSinJefeInmediato = ["Gerente de Recursos Humanos", "Supervisor", "Administrador de Nómina"];

                document.getElementById("puestoTrabajoSelect").addEventListener("change", function () {
                    const puestoTrabajoId = this.value;
                    const jefeInmediatoSelect = document.getElementById("jefeInmediatoSelect");

                    if (puestoTrabajoId) {
                        // Solicitar el nombre del puesto al servidor
                        fetch(`/Empleado/GetPuestoNombre?puestoTrabajoId=${puestoTrabajoId}`)
                            .then(response => response.json())
                            .then(data => {
                                const nombrePuesto = data.nombrePuesto;

                                if (rolesSinJefeInmediato.includes(nombrePuesto)) {
                                    // Deshabilitar el campo Jefe Inmediato
                                    jefeInmediatoSelect.disabled = true;
                                    jefeInmediatoSelect.value = ""; // Limpiar el valor seleccionado
                                } else {
                                    // Habilitar el campo Jefe Inmediato
                                    jefeInmediatoSelect.disabled = false;
                                }
                            })
                            .catch(error => console.error("Error:", error));
                    } else {
                        // Si no hay puesto seleccionado, deshabilitar el campo Jefe Inmediato
                        jefeInmediatoSelect.disabled = true;
                        jefeInmediatoSelect.value = ""; // Limpiar el valor seleccionado
                    }
                });
            </script>

         @*    SCRIPT SALARIO *@
            <script>
                document.getElementById("puestoTrabajoSelect").addEventListener("change", function () {
                    var puestoId = this.value;
                    if (puestoId) {
                        fetch(`/Empleado/GetSalarioBase?puestoTrabajoId=${puestoId}`)
                            .then(response => response.json())
                            .then(data => {
                                document.getElementById("salarioBaseInput").value = data.salarioBase;
                            })
                            .catch(error => console.error("Error:", error));
                    } else {
                        document.getElementById("salarioBaseInput").value = "";
                    }
                });
            </script>

         
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
